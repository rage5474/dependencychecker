<project default="run.gdrive">
  <property name="base.dir" location=".." />
  <property name="project.dir" value="${base.dir}/de.ragedev.dval.releng.deploy" />
  
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="${project.dir}/tools/ant-contrib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <condition property="isWindows">
    <os family="windows" />
  </condition>

  <condition property="isLinux">
    <os family="unix" />
  </condition>
  
  <target name="set.gdrive.path.windows" if="isWindows">
    <property name="gdrive.path" value="${project.dir}/tools/gdrive/windows/x86_64/gdrive.exe" />
  	<property name="config.path" location="${user.home}/AppData/Roaming/.gdrive/token_v2.json" />
  	<echo message="${config.path}" />
  </target>
  
  <target name="set.gdrive.path.linux" if="isLinux">
    <exec dir="." executable="/bin/uname" outputproperty="command.output">
      <arg value="-m"/>
    </exec>
  	<echo message="${command.output}" />
    <if>
      <contains string="${command.output}" substring="_64"/>
    <then>
      <property name="gdrive.path" location="${project.dir}/tools/gdrive/linux/x86_64/gdrive" />
    </then>
    <else>
      <property name="gdrive.path" location="${project.dir}/tools/gdrive/linux/x86/gdrive" />
    </else>
    </if>
  	<property name="config.path" location="${user.home}/.gdrive/token_v2.json" />
  	<exec dir="." executable="/bin/chmod">
  	  <arg line="755 ${gdrive.path}"/>
  	</exec>
  </target>

  <target name="set.gdrive.path" depends="set.gdrive.path.windows,set.gdrive.path.linux">
    <echo message="${gdrive.path}"/>
  </target>
	
  <target name="check.gdrive.config.installed"> 
  	<condition property="gdrive.config.not.installed">    
	  <not>
	    <available file="${config.path}" />
	  </not>
	</condition>
  </target>

  <target name="install.gdrive.config" depends="check.gdrive.config.installed" if="gdrive.config.not.installed">
    <mkdir dir="${user.home}/.gdrive" />
    <copy file="${project.dir}/token_v2.json" tofile="${config.path}"/>
  </target>

  <target name="run.gdrive" depends="set.gdrive.path, install.gdrive.config">
    <tempfile property="temp.file" destDir="${java.io.tmpdir}" prefix="build"/>
  	<property name="dest.root.dir" location="${temp.file}/content" />
  	<property name="dest.updatesite.dir" location="${dest.root.dir}/dval/snapshots/latest/update-site" />
  	<property name="dest.product.dir" location="${dest.root.dir}/dval/snapshots/latest/product" />
    <mkdir dir="${dest.root.dir}" />
    <!-- Download remote update-site -->
    <exec dir="." executable="${gdrive.path}">
      <arg line="sync download 0BzgxECnugKH8V05YekdmbVNWNEU ${dest.root.dir}"/>
    </exec>
    <!-- Delete local update-site -->
    <delete dir="${dest.updatesite.dir}" />
  	<delete dir="${dest.product.dir}" />
    <mkdir dir="${dest.updatesite.dir}" />
  	<mkdir dir="${dest.product.dir}" />
    <!-- Delete remote update-site -->
    <exec dir="." executable="${gdrive.path}">
      <arg line="sync upload --delete-extraneous ${dest.root.dir} 0BzgxECnugKH8V05YekdmbVNWNEU"/>
    </exec>
    <copy todir="${dest.updatesite.dir}">  
      <fileset dir="../de.raphaelgeissler.dependencychecker.tycho.updatesite/target/repository" includes="**"/>  
    </copy>
    <tstamp>
      <format property="TODAY_DE" pattern="HH:mm:ss:sss zzz" locale="de,DE"/>
    </tstamp>
    <copy todir="${dest.product.dir}">  
      <fileset dir="../de.raphaelgeissler.dependencychecker.tycho.releng.product/target/products" includes="*.zip"/>  
    </copy>
    <tstamp>
      <format property="TODAY_DE" pattern="HH:mm:ss:sss zzz" locale="de,DE"/>
    </tstamp>
    <echo message="Products uploaded on ${TODAY_DE}." file="${dest.product.dir}/info.html" />
    <!-- Upload local update-site -->
    <exec dir="." executable="${gdrive.path}">
      <arg line="sync upload --delete-extraneous ${dest.root.dir} 0BzgxECnugKH8V05YekdmbVNWNEU"/>
    </exec>
    
  </target>

</project>